from API.digit_prediction import app
import pytest


def test_post_predict_svm():
    inputs = {"0":["0.0", "0.0", "5.0", "13.0", "9.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "15.0", "10.0", "15.0", "5.0", "0.0", "0.0", "3.0", "15.0", "2.0", "0.0", "11.0", "8.0", "0.0", "0.0", "4.0", "12.0", "0.0", "0.0", "8.0", "8.0", "0.0", "0.0", "5.0", "8.0", "0.0", "0.0", "9.0", "8.0", "0.0", "0.0", "4.0", "11.0", "0.0", "1.0", "12.0", "7.0", "0.0", "0.0", "2.0", "14.0", "5.0", "10.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "13.0", "10.0", "0.0", "0.0", "0.0"],
              "1": ["0.0", "0.0", "0.0", "12.0", "13.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "9.0", "0.0", "0.0", "0.0", "0.0", "3.0", "15.0", "16.0", "6.0", "0.0", "0.0", "0.0", "7.0", "15.0", "16.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "10.0", "0.0", "0.0"],
              "2": ["0.0", "1.0", "10.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "9.0", "9.0", "8.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "11.0", "15.0", "0.0", "0.0", "0.0", "0.0", "0.0", "4.0", "16.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "14.0", "16.0", "16.0", "16.0", "13.0", "0.0", "0.0", "0.0", "9.0", "13.0", "11.0", "10.0", "9.0", "0.0"],
              "3": ["0.0", "0.0", "3.0", "13.0", "16.0", "5.0", "0.0", "0.0", "0.0", "6.0", "15.0", "9.0", "15.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "10.0", "0.0", "0.0", "0.0", "0.0", "7.0", "14.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "14.0", "3.0", "0.0", "0.0", "0.0", "0.0", "3.0", "2.0", "15.0", "10.0", "0.0", "0.0", "0.0", "4.0", "5.0", "12.0", "16.0", "14.0", "0.0", "0.0", "0.0", "5.0", "13.0", "14.0", "8.0", "2.0", "0.0"],
              "4": ["0.0", "0.0", "0.0", "1.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "8.0", "16.0", "6.0", "1.0", "2.0", "0.0", "0.0", "4.0", "16.0", "9.0", "1.0", "15.0", "9.0", "0.0", "0.0", "13.0", "15.0", "6.0", "10.0", "16.0", "6.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "16.0", "1.0", "0.0", "0.0", "1.0", "7.0", "4.0", "14.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "14.0", "9.0", "0.0", "0.0"],
              "5":["0.0", "0.0", "1.0", "10.0", "14.0", "13.0", "1.0", "0.0", "0.0", "0.0", "8.0", "12.0", "6.0", "4.0", "0.0", "0.0", "0.0", "0.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "5.0", "16.0", "12.0", "13.0", "12.0", "0.0", "0.0", "0.0", "2.0", "11.0", "11.0", "8.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "12.0", "14.0", "4.0", "0.0", "0.0"],
              "6": ["0.0", "0.0", "0.0", "6.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "15.0", "14.0", "1.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "1.0", "13.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "16.0", "16.0", "11.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "16.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "11.0", "12.0", "5.0", "0.0"],
              "7":["0.0", "0.0", "3.0", "10.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "14.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "2.0", "15.0", "4.0", "0.0", "0.0", "0.0", "4.0", "4.0", "12.0", "15.0", "5.0", "0.0", "0.0", "1.0", "15.0", "16.0", "16.0", "9.0", "4.0", "0.0", "0.0", "0.0", "2.0", "11.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "12.0", "0.0", "0.0", "0.0", "0.0"],
              "8":["0.0", "0.0", "1.0", "11.0", "15.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "16.0", "8.0", "2.0", "1.0", "0.0", "0.0", "0.0", "16.0", "15.0", "10.0", "16.0", "5.0", "0.0", "0.0", "0.0", "8.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "14.0", "16.0", "15.0", "0.0", "0.0", "0.0", "0.0", "15.0", "15.0", "15.0", "16.0", "0.0", "0.0", "0.0", "0.0", "2.0", "9.0", "13.0", "6.0", "0.0", "0.0"],
              "9":["0.0", "0.0", "4.0", "10.0", "13.0", "6.0", "0.0", "0.0", "0.0", "1.0", "16.0", "14.0", "12.0", "16.0", "3.0", "0.0", "0.0", "4.0", "16.0", "6.0", "3.0", "16.0", "4.0", "0.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "4.0", "4.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "15.0", "5.0", "0.0", "0.0", "0.0", "5.0", "7.0", "7.0", "16.0", "4.0", "0.0", "0.0", "0.0", "2.0", "14.0", "15.0", "9.0", "0.0", "0.0"]}
    
    for model_name in ["svm"]:
        app.testing = True
        response = app.test_client().get("/")
        assert response.status_code == 200
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["0"]})
            
        assert response.get_data() == bytes("0","utf-8") 
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["1"]})
        assert response.get_data() == bytes("1","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["2"]})
        assert response.get_data() == bytes("2","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["3"]})
        assert response.get_data() == bytes("3","utf-8")  
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["4"]})
        assert response.get_data() == bytes("4","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["5"]})
        assert response.get_data() == bytes("5","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["6"]})
        assert response.get_data() == bytes("6","utf-8")

        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["7"]})
        assert response.get_data() == bytes("7","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["8"]})
        assert response.get_data() == bytes("8","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["9"]})
        assert response.get_data() == bytes("9","utf-8")
from API.digit_prediction import app
import pytest


def test_post_predict_LogReg():
    inputs = {"0":["0.0", "0.0", "5.0", "13.0", "9.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "15.0", "10.0", "15.0", "5.0", "0.0", "0.0", "3.0", "15.0", "2.0", "0.0", "11.0", "8.0", "0.0", "0.0", "4.0", "12.0", "0.0", "0.0", "8.0", "8.0", "0.0", "0.0", "5.0", "8.0", "0.0", "0.0", "9.0", "8.0", "0.0", "0.0", "4.0", "11.0", "0.0", "1.0", "12.0", "7.0", "0.0", "0.0", "2.0", "14.0", "5.0", "10.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "13.0", "10.0", "0.0", "0.0", "0.0"],
              "1": ["0.0", "0.0", "0.0", "12.0", "13.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "9.0", "0.0", "0.0", "0.0", "0.0", "3.0", "15.0", "16.0", "6.0", "0.0", "0.0", "0.0", "7.0", "15.0", "16.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "10.0", "0.0", "0.0"],
              "2": ["0.0", "1.0", "10.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "9.0", "9.0", "8.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "11.0", "15.0", "0.0", "0.0", "0.0", "0.0", "0.0", "4.0", "16.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "14.0", "16.0", "16.0", "16.0", "13.0", "0.0", "0.0", "0.0", "9.0", "13.0", "11.0", "10.0", "9.0", "0.0"],
              "3": ["0.0", "0.0", "3.0", "13.0", "16.0", "5.0", "0.0", "0.0", "0.0", "6.0", "15.0", "9.0", "15.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "10.0", "0.0", "0.0", "0.0", "0.0", "7.0", "14.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "14.0", "3.0", "0.0", "0.0", "0.0", "0.0", "3.0", "2.0", "15.0", "10.0", "0.0", "0.0", "0.0", "4.0", "5.0", "12.0", "16.0", "14.0", "0.0", "0.0", "0.0", "5.0", "13.0", "14.0", "8.0", "2.0", "0.0"],
              "4": ["0.0", "0.0", "0.0", "1.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "8.0", "16.0", "6.0", "1.0", "2.0", "0.0", "0.0", "4.0", "16.0", "9.0", "1.0", "15.0", "9.0", "0.0", "0.0", "13.0", "15.0", "6.0", "10.0", "16.0", "6.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "16.0", "1.0", "0.0", "0.0", "1.0", "7.0", "4.0", "14.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "14.0", "9.0", "0.0", "0.0"],
              "5":["0.0", "0.0", "1.0", "10.0", "14.0", "13.0", "1.0", "0.0", "0.0", "0.0", "8.0", "12.0", "6.0", "4.0", "0.0", "0.0", "0.0", "0.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "5.0", "16.0", "12.0", "13.0", "12.0", "0.0", "0.0", "0.0", "2.0", "11.0", "11.0", "8.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "12.0", "14.0", "4.0", "0.0", "0.0"],
              "6": ["0.0", "0.0", "0.0", "6.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "15.0", "14.0", "1.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "1.0", "13.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "16.0", "16.0", "11.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "16.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "11.0", "12.0", "5.0", "0.0"],
              "7":["0.0", "0.0", "3.0", "10.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "14.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "2.0", "15.0", "4.0", "0.0", "0.0", "0.0", "4.0", "4.0", "12.0", "15.0", "5.0", "0.0", "0.0", "1.0", "15.0", "16.0", "16.0", "9.0", "4.0", "0.0", "0.0", "0.0", "2.0", "11.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "12.0", "0.0", "0.0", "0.0", "0.0"],
              "8":["0.0", "0.0", "1.0", "11.0", "15.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "16.0", "8.0", "2.0", "1.0", "0.0", "0.0", "0.0", "16.0", "15.0", "10.0", "16.0", "5.0", "0.0", "0.0", "0.0", "8.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "14.0", "16.0", "15.0", "0.0", "0.0", "0.0", "0.0", "15.0", "15.0", "15.0", "16.0", "0.0", "0.0", "0.0", "0.0", "2.0", "9.0", "13.0", "6.0", "0.0", "0.0"],
              "9":["0.0", "0.0", "4.0", "10.0", "13.0", "6.0", "0.0", "0.0", "0.0", "1.0", "16.0", "14.0", "12.0", "16.0", "3.0", "0.0", "0.0", "4.0", "16.0", "6.0", "3.0", "16.0", "4.0", "0.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "4.0", "4.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "15.0", "5.0", "0.0", "0.0", "0.0", "5.0", "7.0", "7.0", "16.0", "4.0", "0.0", "0.0", "0.0", "2.0", "14.0", "15.0", "9.0", "0.0", "0.0"]}
    
    for model_name in ["LogReg"]:
        app.testing = True
        response = app.test_client().get("/")
        assert response.status_code == 200
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["0"]})
            
        assert response.get_data() == bytes("0","utf-8") 
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["1"]})
        assert response.get_data() == bytes("1","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["2"]})
        assert response.get_data() == bytes("2","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["3"]})
        assert response.get_data() == bytes("3","utf-8")  
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["4"]})
        assert response.get_data() == bytes("4","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["5"]})
        assert response.get_data() == bytes("5","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["6"]})
        assert response.get_data() == bytes("6","utf-8")

        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["7"]})
        assert response.get_data() == bytes("7","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["8"]})
        assert response.get_data() == bytes("8","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["9"]})
        assert response.get_data() == bytes("9","utf-8")

from API.digit_prediction import app
import pytest


def test_post_predict_Dtree():
    inputs = {"0":["0.0", "0.0", "5.0", "13.0", "9.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "15.0", "10.0", "15.0", "5.0", "0.0", "0.0", "3.0", "15.0", "2.0", "0.0", "11.0", "8.0", "0.0", "0.0", "4.0", "12.0", "0.0", "0.0", "8.0", "8.0", "0.0", "0.0", "5.0", "8.0", "0.0", "0.0", "9.0", "8.0", "0.0", "0.0", "4.0", "11.0", "0.0", "1.0", "12.0", "7.0", "0.0", "0.0", "2.0", "14.0", "5.0", "10.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "13.0", "10.0", "0.0", "0.0", "0.0"],
              "1": ["0.0", "0.0", "0.0", "12.0", "13.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "9.0", "0.0", "0.0", "0.0", "0.0", "3.0", "15.0", "16.0", "6.0", "0.0", "0.0", "0.0", "7.0", "15.0", "16.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "16.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "16.0", "10.0", "0.0", "0.0"],
              "2": ["0.0", "1.0", "10.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "9.0", "9.0", "8.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "2.0", "0.0", "0.0", "0.0", "0.0", "1.0", "11.0", "15.0", "0.0", "0.0", "0.0", "0.0", "0.0", "4.0", "16.0", "13.0", "2.0", "0.0", "0.0", "0.0", "0.0", "14.0", "16.0", "16.0", "16.0", "13.0", "0.0", "0.0", "0.0", "9.0", "13.0", "11.0", "10.0", "9.0", "0.0"],
              "3": ["0.0", "0.0", "3.0", "13.0", "16.0", "5.0", "0.0", "0.0", "0.0", "6.0", "15.0", "9.0", "15.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "16.0", "10.0", "0.0", "0.0", "0.0", "0.0", "7.0", "14.0", "16.0", "3.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "14.0", "3.0", "0.0", "0.0", "0.0", "0.0", "3.0", "2.0", "15.0", "10.0", "0.0", "0.0", "0.0", "4.0", "5.0", "12.0", "16.0", "14.0", "0.0", "0.0", "0.0", "5.0", "13.0", "14.0", "8.0", "2.0", "0.0"],
              "4": ["0.0", "0.0", "0.0", "1.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "0.0", "11.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "8.0", "16.0", "6.0", "1.0", "2.0", "0.0", "0.0", "4.0", "16.0", "9.0", "1.0", "15.0", "9.0", "0.0", "0.0", "13.0", "15.0", "6.0", "10.0", "16.0", "6.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "16.0", "1.0", "0.0", "0.0", "1.0", "7.0", "4.0", "14.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "14.0", "9.0", "0.0", "0.0"],
              "5":["0.0", "0.0", "1.0", "10.0", "14.0", "13.0", "1.0", "0.0", "0.0", "0.0", "8.0", "12.0", "6.0", "4.0", "0.0", "0.0", "0.0", "0.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "5.0", "16.0", "12.0", "13.0", "12.0", "0.0", "0.0", "0.0", "2.0", "11.0", "11.0", "8.0", "14.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "6.0", "15.0", "2.0", "0.0", "0.0", "0.0", "0.0", "12.0", "14.0", "4.0", "0.0", "0.0"],
              "6": ["0.0", "0.0", "0.0", "6.0", "12.0", "6.0", "0.0", "0.0", "0.0", "0.0", "1.0", "15.0", "14.0", "1.0", "0.0", "0.0", "0.0", "0.0", "10.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "1.0", "13.0", "16.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "16.0", "16.0", "11.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "16.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "16.0", "12.0", "0.0", "0.0", "0.0", "0.0", "6.0", "11.0", "12.0", "5.0", "0.0"],
              "7":["0.0", "0.0", "3.0", "10.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "14.0", "7.0", "0.0", "0.0", "0.0", "0.0", "0.0", "2.0", "15.0", "4.0", "0.0", "0.0", "0.0", "4.0", "4.0", "12.0", "15.0", "5.0", "0.0", "0.0", "1.0", "15.0", "16.0", "16.0", "9.0", "4.0", "0.0", "0.0", "0.0", "2.0", "11.0", "13.0", "0.0", "0.0", "0.0", "0.0", "0.0", "1.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "0.0", "3.0", "12.0", "0.0", "0.0", "0.0", "0.0"],
              "8":["0.0", "0.0", "1.0", "11.0", "15.0", "1.0", "0.0", "0.0", "0.0", "0.0", "13.0", "16.0", "8.0", "2.0", "1.0", "0.0", "0.0", "0.0", "16.0", "15.0", "10.0", "16.0", "5.0", "0.0", "0.0", "0.0", "8.0", "16.0", "16.0", "7.0", "0.0", "0.0", "0.0", "0.0", "9.0", "16.0", "16.0", "4.0", "0.0", "0.0", "0.0", "0.0", "16.0", "14.0", "16.0", "15.0", "0.0", "0.0", "0.0", "0.0", "15.0", "15.0", "15.0", "16.0", "0.0", "0.0", "0.0", "0.0", "2.0", "9.0", "13.0", "6.0", "0.0", "0.0"],
              "9":["0.0", "0.0", "4.0", "10.0", "13.0", "6.0", "0.0", "0.0", "0.0", "1.0", "16.0", "14.0", "12.0", "16.0", "3.0", "0.0", "0.0", "4.0", "16.0", "6.0", "3.0", "16.0", "4.0", "0.0", "0.0", "0.0", "12.0", "16.0", "16.0", "16.0", "5.0", "0.0", "0.0", "0.0", "0.0", "4.0", "4.0", "16.0", "8.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "15.0", "5.0", "0.0", "0.0", "0.0", "5.0", "7.0", "7.0", "16.0", "4.0", "0.0", "0.0", "0.0", "2.0", "14.0", "15.0", "9.0", "0.0", "0.0"]}
    
    for model_name in ["Dtree"]:
        app.testing = True
        response = app.test_client().get("/")
        assert response.status_code == 200
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["0"]})
            
        assert response.get_data() == bytes("0","utf-8") 
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["1"]})
        assert response.get_data() == bytes("1","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["2"]})
        assert response.get_data() == bytes("2","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["3"]})
        assert response.get_data() == bytes("3","utf-8")  
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["4"]})
        assert response.get_data() == bytes("4","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["5"]})
        assert response.get_data() == bytes("5","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["6"]})
        assert response.get_data() == bytes("6","utf-8")

        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["7"]})
        assert response.get_data() == bytes("7","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["8"]})
        assert response.get_data() == bytes("8","utf-8")
        
        response = app.test_client().post(f"/predict/{model_name}", json={"input":inputs["9"]})
        assert response.get_data() == bytes("9","utf++++
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            
                                            )
